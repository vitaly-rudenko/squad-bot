version: '3.7'
services:
  sb_app:
    container_name: sb_app
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - sb_postgres
      - sb_redis
    environment:
      LOG_LEVEL: "$LOG_LEVEL"
      DEBUG_CHAT_ID: "$DEBUG_CHAT_ID"
      TOKEN_SECRET: "$TOKEN_SECRET"
      TELEGRAM_BOT_TOKEN: "$TELEGRAM_BOT_TOKEN"
      DOMAIN: "$DOMAIN"
      PORT: "$PORT"
      USE_NATIVE_ENV: "true"
      DATABASE_URL: "postgres://squadbot:p4ssw0rd@sb_postgres:5432/squadbot"
      REDIS_URL: "redis://sb_redis:6379"

  sb_postgres:
    container_name: sb_postgres
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: "squadbot"
      POSTGRES_USER: "squadbot"
      POSTGRES_PASSWORD: "p4ssw0rd"
    volumes:
      - "sb_postgres_data:/var/lib/postgresql/data"

  sb_redis:
    container_name: sb_redis
    restart: unless-stopped
    image: redis

  sb_nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      context: nginx
      dockerfile: Dockerfile
    environment:
      APP_URL: "http://sb_app:3000"
      DOMAIN: "$DOMAIN"
      SUBDOMAIN: "$SUBDOMAIN"
    volumes:
      - "./nginx/certificates/letsencrypt:/etc/letsencrypt:ro"
    ports:
      - "80:80"
      - "443:443"

  sb_certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - "./nginx/certificates/letsencrypt:/etc/letsencrypt:delegated"
      - "./nginx/certificates/certbot/www:/var/www/certbot:delegated"
      - "./nginx/logs/misc/letsencrypt:/var/log/letsencrypt:delegated"

volumes:
  sb_postgres_data:
    driver: local
