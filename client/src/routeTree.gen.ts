// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ReceiptsIndexImport } from './routes/receipts/index'
import { Route as PaymentsIndexImport } from './routes/payments/index'
import { Route as GroupsIndexImport } from './routes/groups/index'
import { Route as CardsIndexImport } from './routes/cards/index'
import { Route as ReceiptsReceiptIdImport } from './routes/receipts/$receiptId'
import { Route as PaymentsPaymentIdImport } from './routes/payments/$paymentId'
import { Route as CardsCardIdImport } from './routes/cards/$cardId'
import { Route as GroupsGroupIdTitlesIndexImport } from './routes/groups/$groupId/titles/index'
import { Route as GroupsGroupIdRollCallsIndexImport } from './routes/groups/$groupId/roll-calls/index'
import { Route as GroupsGroupIdRollCallsRollCallIdImport } from './routes/groups/$groupId/roll-calls/$rollCallId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReceiptsIndexRoute = ReceiptsIndexImport.update({
  path: '/receipts/',
  getParentRoute: () => rootRoute,
} as any)

const PaymentsIndexRoute = PaymentsIndexImport.update({
  path: '/payments/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsIndexRoute = GroupsIndexImport.update({
  path: '/groups/',
  getParentRoute: () => rootRoute,
} as any)

const CardsIndexRoute = CardsIndexImport.update({
  path: '/cards/',
  getParentRoute: () => rootRoute,
} as any)

const ReceiptsReceiptIdRoute = ReceiptsReceiptIdImport.update({
  path: '/receipts/$receiptId',
  getParentRoute: () => rootRoute,
} as any)

const PaymentsPaymentIdRoute = PaymentsPaymentIdImport.update({
  path: '/payments/$paymentId',
  getParentRoute: () => rootRoute,
} as any)

const CardsCardIdRoute = CardsCardIdImport.update({
  path: '/cards/$cardId',
  getParentRoute: () => rootRoute,
} as any)

const GroupsGroupIdTitlesIndexRoute = GroupsGroupIdTitlesIndexImport.update({
  path: '/groups/$groupId/titles/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsGroupIdRollCallsIndexRoute =
  GroupsGroupIdRollCallsIndexImport.update({
    path: '/groups/$groupId/roll-calls/',
    getParentRoute: () => rootRoute,
  } as any)

const GroupsGroupIdRollCallsRollCallIdRoute =
  GroupsGroupIdRollCallsRollCallIdImport.update({
    path: '/groups/$groupId/roll-calls/$rollCallId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cards/$cardId': {
      preLoaderRoute: typeof CardsCardIdImport
      parentRoute: typeof rootRoute
    }
    '/payments/$paymentId': {
      preLoaderRoute: typeof PaymentsPaymentIdImport
      parentRoute: typeof rootRoute
    }
    '/receipts/$receiptId': {
      preLoaderRoute: typeof ReceiptsReceiptIdImport
      parentRoute: typeof rootRoute
    }
    '/cards/': {
      preLoaderRoute: typeof CardsIndexImport
      parentRoute: typeof rootRoute
    }
    '/groups/': {
      preLoaderRoute: typeof GroupsIndexImport
      parentRoute: typeof rootRoute
    }
    '/payments/': {
      preLoaderRoute: typeof PaymentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/receipts/': {
      preLoaderRoute: typeof ReceiptsIndexImport
      parentRoute: typeof rootRoute
    }
    '/groups/$groupId/roll-calls/$rollCallId': {
      preLoaderRoute: typeof GroupsGroupIdRollCallsRollCallIdImport
      parentRoute: typeof rootRoute
    }
    '/groups/$groupId/roll-calls/': {
      preLoaderRoute: typeof GroupsGroupIdRollCallsIndexImport
      parentRoute: typeof rootRoute
    }
    '/groups/$groupId/titles/': {
      preLoaderRoute: typeof GroupsGroupIdTitlesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CardsCardIdRoute,
  PaymentsPaymentIdRoute,
  ReceiptsReceiptIdRoute,
  CardsIndexRoute,
  GroupsIndexRoute,
  PaymentsIndexRoute,
  ReceiptsIndexRoute,
  GroupsGroupIdRollCallsRollCallIdRoute,
  GroupsGroupIdRollCallsIndexRoute,
  GroupsGroupIdTitlesIndexRoute,
])
